generator client {
    provider        = "prisma-client"
    // previewFeatures = ["queryCompiler", "driverAdapters"]
    output          = "../generated/prisma"
    // binaryTargets   = ["native", "rhel-openssl-3.0.x"]
    // engineType      = "client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String?
    access_token             String?
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String?
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model User {
    id        String    @id @default(cuid())
    name      String?
    email     String?   @unique
    password  String?
    image     String?
    role      String    @default("USER")
    accounts  Account[]
    sessions  Session[]
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt

    @@index([email])
    @@index([id])
}

model Product {
    id          String   @id @default(cuid())
    name        String
    price       Int
    description String?
    image       String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}
